// <auto-generated />
using ExploreCalifornia.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExploreCalifornia.Migrations
{
    [DbContext(typeof(ExploreCaliforniaContext))]
    [Migration("20190210093706_PainDiary")]
    partial class PainDiary
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExploreCalifornia.Models.Interference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description");

                    b.Property<int>("duration");

                    b.Property<int>("painEntryId");

                    b.Property<int>("severity");

                    b.HasKey("Id");

                    b.HasIndex("painEntryId")
                        .IsUnique();

                    b.ToTable("Interference");
                });

            modelBuilder.Entity("ExploreCalifornia.Models.Mood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("duration");

                    b.Property<int>("moodType");

                    b.Property<int>("painEntryId");

                    b.HasKey("Id");

                    b.HasIndex("painEntryId")
                        .IsUnique();

                    b.ToTable("Mood");
                });

            modelBuilder.Entity("ExploreCalifornia.Models.PainDiary", b =>
                {
                    b.Property<int>("patientId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("patientName");

                    b.HasKey("patientId");

                    b.ToTable("PainDiary");
                });

            modelBuilder.Entity("ExploreCalifornia.Models.PainEntry", b =>
                {
                    b.Property<int>("painEntryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("patientId");

                    b.HasKey("painEntryId");

                    b.HasIndex("patientId");

                    b.ToTable("PainEntry");
                });

            modelBuilder.Entity("ExploreCalifornia.Models.Interference", b =>
                {
                    b.HasOne("ExploreCalifornia.Models.PainEntry")
                        .WithOne("Interference")
                        .HasForeignKey("ExploreCalifornia.Models.Interference", "painEntryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ExploreCalifornia.Models.Mood", b =>
                {
                    b.HasOne("ExploreCalifornia.Models.PainEntry")
                        .WithOne("Mood")
                        .HasForeignKey("ExploreCalifornia.Models.Mood", "painEntryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ExploreCalifornia.Models.PainEntry", b =>
                {
                    b.HasOne("ExploreCalifornia.Models.PainDiary")
                        .WithMany("painEntry")
                        .HasForeignKey("patientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
